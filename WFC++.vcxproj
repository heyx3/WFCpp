<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{38A88B72-ACE0-400E-AC82-677C89622B69}</ProjectGuid>
    <RootNamespace>WFC</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetExt>.dll</TargetExt>
    <OutDir>$(SolutionDir)Build\$(ProjectName)\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)Build\temp\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetExt>.dll</TargetExt>
    <OutDir>$(SolutionDir)Build\$(ProjectName)\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)Build\temp\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetExt>.dll</TargetExt>
    <OutDir>$(SolutionDir)Build\$(ProjectName)\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)Build\temp\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetExt>.dll</TargetExt>
    <OutDir>$(SolutionDir)Build\$(ProjectName)\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)Build\temp\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_WINDLL;WFC_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)\%(RelativeDir)\%(Filename).obj</ObjectFileName>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <PostBuildEvent>
      <Command>if exist "$(TargetDir)include" del /q "$(TargetDir)include"
mkdir "$(TargetDir)include"

xcopy "$(ProjectDir)WFC++\*.h" "$(TargetDir)include" /sy
xcopy "$(ProjectDir)WFC++\*.hpp" "$(TargetDir)include" /sy</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy headers to build folder</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>REM Make sure Swig exists
swig -help &gt;nul 2&gt;&amp;1 &amp;&amp; (
    REM everything's fine
) || (
    echo ERROR: Couldn't find SWIG! Make sure it's in your PATH.
    swig -help
    exit 1
)

REM Clear the CSharp output folder, and run SWIG to output there and overwrite the C++ file already in this project
set CS_OUT_PATH=$(OutputPath)CSharp_include
if exist %CS_OUT_PATH% del /Q %CS_OUT_PATH% else mkdir %CS_OUT_PATH%
swig -c++ -csharp -outdir "%CS_OUT_PATH%" -o "$(ProjectDir)WFC++\SWIG\wfc_wrap.cpp" "$(ProjectDir)WFC++\SWIG\SWIG_build.i"</Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>Run SWIG to generate C exports and C# imports</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_WINDLL;WFC_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)\%(RelativeDir)\%(Filename).obj</ObjectFileName>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <PostBuildEvent>
      <Command>if exist "$(TargetDir)include" del /q "$(TargetDir)include"
mkdir "$(TargetDir)include"

xcopy "$(ProjectDir)WFC++\*.h" "$(TargetDir)include" /sy
xcopy "$(ProjectDir)WFC++\*.hpp" "$(TargetDir)include" /sy</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy headers to build folder</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>REM Make sure Swig exists
swig -help &gt;nul 2&gt;&amp;1 &amp;&amp; (
    REM everything's fine
) || (
    echo ERROR: Couldn't find SWIG! Make sure it's in your PATH.
    swig -help
    exit 1
)

REM Clear the CSharp output folder, and run SWIG to output there and overwrite the C++ file already in this project
set CS_OUT_PATH=$(OutputPath)CSharp_include
if exist %CS_OUT_PATH% del /Q %CS_OUT_PATH% else mkdir %CS_OUT_PATH%
swig -c++ -csharp -outdir "%CS_OUT_PATH%" -o "$(ProjectDir)WFC++\SWIG\wfc_wrap.cpp" "$(ProjectDir)WFC++\SWIG\SWIG_build.i"</Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>Run SWIG to generate C exports and C# imports</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_WINDLL;WFC_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)\%(RelativeDir)\%(Filename).obj</ObjectFileName>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>if exist "$(TargetDir)include" del /q "$(TargetDir)include"
mkdir "$(TargetDir)include"

xcopy "$(ProjectDir)WFC++\*.h" "$(TargetDir)include" /sy
xcopy "$(ProjectDir)WFC++\*.hpp" "$(TargetDir)include" /sy</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy headers to build folder</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>REM Make sure Swig exists
swig -help &gt;nul 2&gt;&amp;1 &amp;&amp; (
    REM everything's fine
) || (
    echo ERROR: Couldn't find SWIG! Make sure it's in your PATH.
    swig -help
    exit 1
)

REM Clear the CSharp output folder, and run SWIG to output there and overwrite the C++ file already in this project
set CS_OUT_PATH=$(OutputPath)CSharp_include
if exist %CS_OUT_PATH% del /Q %CS_OUT_PATH% else mkdir %CS_OUT_PATH%
swig -c++ -csharp -outdir "%CS_OUT_PATH%" -o "$(ProjectDir)WFC++\SWIG\wfc_wrap.cpp" "$(ProjectDir)WFC++\SWIG\SWIG_build.i"</Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>Run SWIG to generate C exports and C# imports</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_WINDLL;WFC_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)\%(RelativeDir)\%(Filename).obj</ObjectFileName>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>if exist "$(TargetDir)include" del /q "$(TargetDir)include"
mkdir "$(TargetDir)include"

xcopy "$(ProjectDir)WFC++\*.h" "$(TargetDir)include" /sy
xcopy "$(ProjectDir)WFC++\*.hpp" "$(TargetDir)include" /sy</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy headers to build folder</Message>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>REM Make sure Swig exists
swig -help &gt;nul 2&gt;&amp;1 &amp;&amp; (
    REM everything's fine
) || (
    echo ERROR: Couldn't find SWIG! Make sure it's in your PATH.
    swig -help
    exit 1
)

REM Clear the CSharp output folder, and run SWIG to output there and overwrite the C++ file already in this project
set CS_OUT_PATH=$(OutputPath)CSharp_include
if exist %CS_OUT_PATH% del /Q %CS_OUT_PATH% else mkdir %CS_OUT_PATH%
swig -c++ -csharp -outdir "%CS_OUT_PATH%" -o "$(ProjectDir)WFC++\SWIG\wfc_wrap.cpp" "$(ProjectDir)WFC++\SWIG\SWIG_build.i"</Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>Run SWIG to generate C exports and C# imports</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="WFC++\Array2D.hpp" />
    <ClInclude Include="WFC++\Array3D.hpp" />
    <ClInclude Include="WFC++\Dictionary.hpp" />
    <ClInclude Include="WFC++\EnumFlags.h" />
    <ClInclude Include="WFC++\HelperClasses.h" />
    <ClInclude Include="WFC++\List.hpp" />
    <ClInclude Include="WFC++\Tiled3D\Transform3D.h" />
    <ClInclude Include="WFC++\WFCMath.h" />
    <ClInclude Include="WFC++\Nullable.hpp" />
    <ClInclude Include="WFC++\Platform.h" />
    <ClInclude Include="WFC++\Set.hpp" />
    <ClInclude Include="WFC++\Simple\InputData.h" />
    <ClInclude Include="WFC++\Simple\Pattern.h" />
    <ClInclude Include="WFC++\Simple\State.h" />
    <ClInclude Include="WFC++\Tiled\InputData.h" />
    <ClInclude Include="WFC++\Tiled\Tile.hpp" />
    <ClInclude Include="WFC++\Tiled\State.h" />
    <ClInclude Include="WFC++\Tiled\TilePermutator.h" />
    <ClInclude Include="WFC++\Vector2i.h" />
    <ClInclude Include="WFC++\Vector3i.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="WFC++\Simple\InputData.cpp" />
    <ClCompile Include="WFC++\Simple\Pattern.cpp" />
    <ClCompile Include="WFC++\Simple\State.cpp" />
    <ClCompile Include="WFC++\SWIG\wfc_wrap.cpp" />
    <ClCompile Include="WFC++\Tiled3D\Transform3D.cpp" />
    <ClCompile Include="WFC++\Tiled\InputData.cpp" />
    <ClCompile Include="WFC++\Tiled\State.cpp" />
    <ClCompile Include="WFC++\Tiled\TilePermutator.cpp" />
    <ClCompile Include="WFC++\Vector2i.cpp" />
    <ClCompile Include="WFC++\Vector3i.cpp" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="WFC++\SWIG\SWIG_build.i">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</ExcludedFromBuild>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</DeploymentContent>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</ExcludedFromBuild>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</DeploymentContent>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ExcludedFromBuild>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</DeploymentContent>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ExcludedFromBuild>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</DeploymentContent>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">echo TEST</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)WFC++;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">echo TEST</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)WFC++;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">echo TEST</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)WFC++;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">echo TEST</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)WFC++;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectDir)WFC++\SWIG\wfc_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectDir)WFC++\SWIG\wfc_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)WFC++\SWIG\wfc_wrap.cpp;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)WFC++\SWIG\wfc_wrap.cpp;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>